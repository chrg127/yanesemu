#include "screen.hpp"

// refer to http://wiki.nesdev.com/w/index.php/PPU_palettes for details on these palettes.
static uint32 pal2C02[] = {
    0x545454FF, 0x001E74FF, 0x081090FF, 0x300088FF,
    0x440064FF, 0x5C0030FF, 0x540400FF, 0x3C1800FF,
    0x202A00FF, 0x083A00FF, 0x004000FF, 0x003C00FF,
    0x00323CFF, 0x000000FF, 0x000000FF, 0x000000FF,

    0x989698FF, 0x084CC4FF, 0x3032ECFF, 0x5C1EE4FF,
    0x8814B0FF, 0xA01464FF, 0x982220FF, 0x783C00FF,
    0x545A00FF, 0x287200FF, 0x087C00FF, 0x007628FF,
    0x006678FF, 0x000000FF, 0x000000FF, 0x000000FF,

    0xECEEECFF, 0x4C9AECFF, 0x787CECFF, 0xB062ECFF,
    0xE454ECFF, 0xEC58B4FF, 0xEC6A64FF, 0xD48820FF,
    0xA0AA00FF, 0x74C400FF, 0x4CD020FF, 0x38CC6CFF,
    0x38B4CCFF, 0x3C3C3CFF, 0x000000FF, 0x000000FF,

    0xECEEECFF, 0xA8CCECFF, 0xBCBCECFF, 0xD4B2ECFF,
    0xECAEECFF, 0xECAED4FF, 0xECB4B0FF, 0xE4C490FF,
    0xCCD278FF, 0xB4DE78FF, 0xA8E290FF, 0x98E2B4FF,
    0xA0D6E4FF, 0xA0A2A0FF, 0x000000FF, 0x000000FF,
};

static uint32 pal2C03[] = {
    0x6D6D6DFF, 0x002491FF, 0x0000DAFF, 0x6D48DAFF,
    0x91006DFF, 0xB6006DFF, 0xB62400FF, 0x914800FF,
    0x6D4800FF, 0x244800FF, 0x006D24FF, 0x009100FF,
    0x004848FF, 0x000000FF, 0x000000FF, 0x000000FF,

    0xB6B6B6FF, 0x006DDAFF, 0x0048FFFF, 0x9100FFFF,
    0xB600FFFF, 0xFF0091FF, 0xFF0000FF, 0xDA6D00FF,
    0x916D00FF, 0x249100FF, 0x009100FF, 0x00B66DFF,
    0x009191FF, 0x000000FF, 0x000000FF, 0x000000FF,

    0xFFFFFFFF, 0x6DB6FFFF, 0x9191FFFF, 0xDA6DFFFF,
    0xFF00FFFF, 0xFF6DFFFF, 0xFF9100FF, 0xFFB600FF,
    0xDADA00FF, 0x6DDA00FF, 0x00FF00FF, 0x48FFDAFF,
    0x00FFFFFF, 0x000000FF, 0x000000FF, 0x000000FF,

    0xFFFFFFFF, 0xB6DAFFFF, 0xDAB6FFFF, 0xFFB6FFFF,
    0xFF91FFFF, 0xFFB6B6FF, 0xFFDA91FF, 0xFFFF48FF,
    0xFFFF6DFF, 0xB6FF48FF, 0x91FF6DFF, 0x48FFDAFF,
    0x91DAFFFF, 0x000000FF, 0x000000FF, 0x000000FF,
};

static uint32 pal_rc2C03b[] = {
    0x6D6D6DFF, 0x002491FF, 0x0000DAFF, 0x6D48DAFF,
    0x91006DFF, 0xB6006DFF, 0xB62400FF, 0x914800FF,
    0x6D4800FF, 0x240000FF, 0x006D24FF, 0x009100FF,
    0x004848FF, 0x000000FF, 0x000000FF, 0x000000FF,

    0xB6B6B6FF, 0x0024DAFF, 0x0048FFFF, 0x9100FFFF,
    0xB600FFFF, 0xFF0091FF, 0xFF0000FF, 0xDA6D00FF,
    0x916D00FF, 0x249100FF, 0x009100FF, 0x00B66DFF,
    0x009191FF, 0x000000FF, 0x000000FF, 0x000000FF,

    0xFFFFFFFF, 0x6DB6FFFF, 0x9191FFFF, 0xDA6DFFFF,
    0xFF00FFFF, 0xFF24FFFF, 0xFF9100FF, 0xFFB600FF,
    0xDADA00FF, 0x6D9100FF, 0x00FF00FF, 0x48FFDAFF,
    0x00FFFFFF, 0x000000FF, 0x000000FF, 0x000000FF,

    0xFFFFFFFF, 0xB691FFFF, 0xDAB6FFFF, 0xFFB6FFFF,
    0xFF91FFFF, 0xFFB6B6FF, 0xFFDA91FF, 0xFFFF48FF,
    0xFFFF6DFF, 0xB6B648FF, 0x91FF6DFF, 0x48FFDAFF,
    0x91DAFFFF, 0x000000FF, 0x000000FF, 0x000000FF,
};

Screen::Screen()
{
    for (std::size_t x = 0; x < buf.width(); x++)
        for (std::size_t y = 0; y < buf.height(); y++)
            buf[y][x] = 0;
    pal = pal2C02;
}

void Screen::output(unsigned x, unsigned y, uint6 value)
{
    buf[y][x] = pal[value];
}

void Screen::set_palette(Palette palette)
{
    pal = palette == Palette::PAL2C02 ? pal2C02
        : palette == Palette::PAL2C03 ? pal2C03
        : palette == Palette::RC2C03B ? pal_rc2C03b
        : pal2C02;
}

